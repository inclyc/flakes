# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, pkgs, lib, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "nvme" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelParams = [ "intel_iommu=on" "iommu=pt" ];

  boot.kernelPackages = pkgs.linuxPackages_latest;

  zramSwap.enable = true;

  boot.blacklistedKernelModules = [ "i2c_nvidia_gpu" "nouveau" ];

  boot.loader.systemd-boot = {
    enable = true;
    configurationLimit = 5;
  };

  # These modules are required for PCI passthrough, and must come before early modesetting stuff
  boot.kernelModules = [ "vfio" "vfio_iommu_type1" "vfio_pci" "vfio_virqfd" "kvm-intel" ];


  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/4bb1ddc7-5cab-4fca-b6bc-897615107387";
      fsType = "btrfs";
      options = [ "subvol=root,compress=zstd" ];
    };

  fileSystems."/home" =
    {
      device = "/dev/disk/by-uuid/4bb1ddc7-5cab-4fca-b6bc-897615107387";
      fsType = "btrfs";
      options = [ "subvol=home,compress=zstd" ];
    };

  fileSystems."/nix" =
    {
      device = "/dev/disk/by-uuid/4bb1ddc7-5cab-4fca-b6bc-897615107387";
      fsType = "btrfs";
      options = [ "subvol=nix,compress=zstd,noatime" ];
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/3CCC-44DC";
      fsType = "vfat";
    };

  fileSystems."/var/hdd_store" =
    {
      device = "/dev/disk/by-uuid/542425ca-baf4-427b-84d7-a9334eaa90d4";
      fsType = "ext4";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
